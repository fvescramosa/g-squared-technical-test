{"version":3,"sources":["header.js"],"names":["debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout"],"mappings":"aAAA;;;;;;;;UAUA,QAASA,SAAT,CAAkBC,IAAlB,CAAwBC,IAAxB,CAA8BC,SAA9B,CAAyC,CACvC,GAAIC,QAAJ,CACA,MAAO,WAAW,CAChB,GAAIC,SAAU,IAAd,CAAoBC,KAAOC,SAA3B,CACA,GAAIC,OAAQ,QAARA,MAAQ,EAAW,CACrBJ,QAAU,IAAV,CACA,GAAI,CAACD,SAAL,CAAgBF,KAAKQ,KAAL,CAAWJ,OAAX,CAAoBC,IAApB,EACjB,CAHD,CAIA,GAAII,SAAUP,WAAa,CAACC,OAA5B,CACAO,aAAaP,OAAb,EACAA,QAAUQ,WAAWJ,KAAX,CAAkBN,IAAlB,CAAV,CACA,GAAIQ,OAAJ,CAAaT,KAAKQ,KAAL,CAAWJ,OAAX,CAAoBC,IAApB,EACd,CAVD,CAWD","file":"header-scripts.js","sourcesContent":["/********\n * Debounce function\n *\n * Returns a function, that, as long as it continues to be invoked, will not be triggered.\n * The function will be called after it stops being called for N milliseconds.\n * If `immediate` is passed, trigger the function on the leading edge, instead of the trailing.\n *\n * Reference: https://davidwalsh.name/javascript-debounce-function\n ********/\n\nfunction debounce(func, wait, immediate) {\n  var timeout;\n  return function() {\n    var context = this, args = arguments;\n    var later = function() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n"]}